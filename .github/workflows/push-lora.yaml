name: Push Lora Models

on:
  
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run on'
        type: string
        default: 'main'
        required: true
      no_push_lora:
        description: 'Test only, without pushing LORA models to prod'
        type: boolean
        default: true

jobs:
  cog-safe-push-lora:
    runs-on: ubuntu-latest-4-cores

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install Cog
      run: |
        sudo curl -o /usr/local/bin/cog -L "https://github.com/replicate/cog/releases/latest/download/cog_$(uname -s)_$(uname -m)"
        sudo chmod +x /usr/local/bin/cog

    - name: cog login
      run: |
        echo ${{ secrets.COG_TOKEN }} | cog login --token-stdin

    - name: Install cog-safe-push
      run: |
        pip install git+https://github.com/replicate/cog-safe-push.git

    - name: Select dev-lora
      run: |
        ./script/select.sh dev-lora

    - name: Run cog-safe-push on flux-dev-lora
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
      run: |
        cog-safe-push -vv ${{ github.event.inputs.no_push_lora == 'true' && '--no-push' || '' }} --config=safe-push-configs/cog-safe-push-dev-lora.yaml

    - name: Select schnell-lora
      run: |
        ./script/select.sh schnell-lora

    - name: Run cog-safe-push on flux-schnell-lora
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
      run: |
        cog-safe-push -vv ${{ github.event.inputs.no_push_lora == 'true' && '--no-push' || '' }} --config=safe-push-configs/cog-safe-push-schnell-lora.yaml